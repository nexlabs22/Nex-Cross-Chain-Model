{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/Context.sol":"Context"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/Context.sol":{"keccak256":"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439","urls":["bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c","dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/Context.sol","id":70118,"exportedSymbols":{"Context":[70117]},"nodeType":"SourceUnit","src":"101:861:137","nodes":[{"id":70089,"nodeType":"PragmaDirective","src":"101:23:137","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":70117,"nodeType":"ContractDefinition","src":"623:338:137","nodes":[{"id":70099,"nodeType":"FunctionDefinition","src":"655:96:137","nodes":[],"body":{"id":70098,"nodeType":"Block","src":"717:34:137","nodes":[],"statements":[{"expression":{"expression":{"id":70095,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:137","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":70096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:137","memberName":"sender","nodeType":"MemberAccess","src":"734:10:137","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":70094,"id":70097,"nodeType":"Return","src":"727:17:137"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:137","parameters":{"id":70091,"nodeType":"ParameterList","parameters":[],"src":"674:2:137"},"returnParameters":{"id":70094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70093,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70099,"src":"708:7:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70092,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:137","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:137"},"scope":70117,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":70108,"nodeType":"FunctionDefinition","src":"757:99:137","nodes":[],"body":{"id":70107,"nodeType":"Block","src":"824:32:137","nodes":[],"statements":[{"expression":{"expression":{"id":70104,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:137","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":70105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:137","memberName":"data","nodeType":"MemberAccess","src":"841:8:137","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":70103,"id":70106,"nodeType":"Return","src":"834:15:137"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:137","parameters":{"id":70100,"nodeType":"ParameterList","parameters":[],"src":"774:2:137"},"returnParameters":{"id":70103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70108,"src":"808:14:137","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":70101,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:137","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:137"},"scope":70117,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":70116,"nodeType":"FunctionDefinition","src":"862:97:137","nodes":[],"body":{"id":70115,"nodeType":"Block","src":"934:25:137","nodes":[],"statements":[{"expression":{"hexValue":"30","id":70113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:137","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":70112,"id":70114,"nodeType":"Return","src":"944:8:137"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:137","parameters":{"id":70109,"nodeType":"ParameterList","parameters":[],"src":"891:2:137"},"returnParameters":{"id":70112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70116,"src":"925:7:137","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":70110,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:137","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:137"},"scope":70117,"stateMutability":"view","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":70090,"nodeType":"StructuredDocumentation","src":"126:496:137","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"linearizedBaseContracts":[70117],"name":"Context","nameLocation":"641:7:137","scope":70118,"usedErrors":[],"usedEvents":[]}],"license":"MIT"},"id":137}