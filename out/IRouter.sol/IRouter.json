{"abi":[{"type":"function","name":"getOnRamp","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"onRampAddress","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isOffRamp","inputs":[{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"offRamp","type":"address","internalType":"address"}],"outputs":[{"name":"isOffRamp","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"routeMessage","inputs":[{"name":"message","type":"tuple","internalType":"struct Client.Any2EVMMessage","components":[{"name":"messageId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"sender","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"destTokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}]},{"name":"gasForCallExactCheck","type":"uint16","internalType":"uint16"},{"name":"gasLimit","type":"uint256","internalType":"uint256"},{"name":"receiver","type":"address","internalType":"address"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"},{"name":"retBytes","type":"bytes","internalType":"bytes"},{"name":"gasUsed","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"error","name":"OnlyOffRamp","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getOnRamp(uint64)":"a8d87a3b","isOffRamp(uint64,address)":"83826b2b","routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":"3cf97983"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyOffRamp\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"getOnRamp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"onRampAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"offRamp\",\"type\":\"address\"}],\"name\":\"isOffRamp\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOffRamp\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"},{\"internalType\":\"uint16\",\"name\":\"gasForCallExactCheck\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"routeMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"retBytes\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getOnRamp(uint64)\":{\"params\":{\"destChainSelector\":\"The destination chain Id to get the onRamp for.\"},\"returns\":{\"onRampAddress\":\"The address of the onRamp.\"}},\"isOffRamp(uint64,address)\":{\"params\":{\"offRamp\":\"The address of the offRamp to check.\",\"sourceChainSelector\":\"The source chain selector to check.\"}},\"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)\":{\"details\":\"if the receiver is a contracts that signals support for CCIP execution through EIP-165. the contract is called. If not, only tokens are transferred.\",\"params\":{\"gasForCallExactCheck\":\"of params for exec\",\"gasLimit\":\"set of params for exec\",\"message\":\"Client.Any2EVMMessage struct.\",\"receiver\":\"set of params for exec\"},\"returns\":{\"gasUsed\":\"the gas used by the external customer call. Does not include any overhead.\",\"retBytes\":\"A bytes array containing return data form CCIP receiver.\",\"success\":\"A boolean value indicating whether the ccip message was received without errors.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getOnRamp(uint64)\":{\"notice\":\"Returns the configured onramp for a specific destination chain.\"},\"isOffRamp(uint64,address)\":{\"notice\":\"Return true if the given offRamp is a configured offRamp for the given source chain.\"},\"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)\":{\"notice\":\"Route the message to its intended receiver contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouter.sol\":\"IRouter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouter.sol\":{\"keccak256\":\"0x3035d3a01e424735d8a9a84b41135aefba7e7d6d88cbbdc42f5e4e4ad6b92da1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ff87c9d51c4c07e234d489cdc75380d532d57579309b0967705e25628051296\",\"dweb:/ipfs/Qmcb34ajZeGTAtitCWo4RBpu12nCRjxGMmKMBsqVjiHesm\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"OnlyOffRamp"},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"getOnRamp","outputs":[{"internalType":"address","name":"onRampAddress","type":"address"}]},{"inputs":[{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"address","name":"offRamp","type":"address"}],"stateMutability":"view","type":"function","name":"isOffRamp","outputs":[{"internalType":"bool","name":"isOffRamp","type":"bool"}]},{"inputs":[{"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]},{"internalType":"uint16","name":"gasForCallExactCheck","type":"uint16"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"address","name":"receiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"routeMessage","outputs":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"retBytes","type":"bytes"},{"internalType":"uint256","name":"gasUsed","type":"uint256"}]}],"devdoc":{"kind":"dev","methods":{"getOnRamp(uint64)":{"params":{"destChainSelector":"The destination chain Id to get the onRamp for."},"returns":{"onRampAddress":"The address of the onRamp."}},"isOffRamp(uint64,address)":{"params":{"offRamp":"The address of the offRamp to check.","sourceChainSelector":"The source chain selector to check."}},"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":{"details":"if the receiver is a contracts that signals support for CCIP execution through EIP-165. the contract is called. If not, only tokens are transferred.","params":{"gasForCallExactCheck":"of params for exec","gasLimit":"set of params for exec","message":"Client.Any2EVMMessage struct.","receiver":"set of params for exec"},"returns":{"gasUsed":"the gas used by the external customer call. Does not include any overhead.","retBytes":"A bytes array containing return data form CCIP receiver.","success":"A boolean value indicating whether the ccip message was received without errors."}}},"version":1},"userdoc":{"kind":"user","methods":{"getOnRamp(uint64)":{"notice":"Returns the configured onramp for a specific destination chain."},"isOffRamp(uint64,address)":{"notice":"Return true if the given offRamp is a configured offRamp for the given source chain."},"routeMessage((bytes32,uint64,bytes,bytes,(address,uint256)[]),uint16,uint256,address)":{"notice":"Route the message to its intended receiver contract."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouter.sol":"IRouter"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouter.sol":{"keccak256":"0x3035d3a01e424735d8a9a84b41135aefba7e7d6d88cbbdc42f5e4e4ad6b92da1","urls":["bzz-raw://5ff87c9d51c4c07e234d489cdc75380d532d57579309b0967705e25628051296","dweb:/ipfs/Qmcb34ajZeGTAtitCWo4RBpu12nCRjxGMmKMBsqVjiHesm"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88","urls":["bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256","dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouter.sol","id":59769,"exportedSymbols":{"Client":[59891],"IRouter":[59768]},"nodeType":"SourceUnit","src":"32:1689:75","nodes":[{"id":59726,"nodeType":"PragmaDirective","src":"32:23:75","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":59728,"nodeType":"ImportDirective","src":"57:47:75","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","nameLocation":"-1:-1:-1","scope":59769,"sourceUnit":59892,"symbolAliases":[{"foreign":{"id":59727,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59891,"src":"65:6:75","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59768,"nodeType":"ContractDefinition","src":"106:1614:75","nodes":[{"id":59730,"nodeType":"ErrorDefinition","src":"128:20:75","nodes":[],"errorSelector":"d2316ede","name":"OnlyOffRamp","nameLocation":"134:11:75","parameters":{"id":59729,"nodeType":"ParameterList","parameters":[],"src":"145:2:75"}},{"id":59749,"nodeType":"FunctionDefinition","src":"859:219:75","nodes":[],"documentation":{"id":59731,"nodeType":"StructuredDocumentation","src":"152:704:75","text":"@notice Route the message to its intended receiver contract.\n @param message Client.Any2EVMMessage struct.\n @param gasForCallExactCheck of params for exec\n @param gasLimit set of params for exec\n @param receiver set of params for exec\n @dev if the receiver is a contracts that signals support for CCIP execution through EIP-165.\n the contract is called. If not, only tokens are transferred.\n @return success A boolean value indicating whether the ccip message was received without errors.\n @return retBytes A bytes array containing return data form CCIP receiver.\n @return gasUsed the gas used by the external customer call. Does not include any overhead."},"functionSelector":"3cf97983","implemented":false,"kind":"function","modifiers":[],"name":"routeMessage","nameLocation":"868:12:75","parameters":{"id":59741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59734,"mutability":"mutable","name":"message","nameLocation":"917:7:75","nodeType":"VariableDeclaration","scope":59749,"src":"886:38:75","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59832_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":59733,"nodeType":"UserDefinedTypeName","pathNode":{"id":59732,"name":"Client.Any2EVMMessage","nameLocations":["886:6:75","893:14:75"],"nodeType":"IdentifierPath","referencedDeclaration":59832,"src":"886:21:75"},"referencedDeclaration":59832,"src":"886:21:75","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59832_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"},{"constant":false,"id":59736,"mutability":"mutable","name":"gasForCallExactCheck","nameLocation":"937:20:75","nodeType":"VariableDeclaration","scope":59749,"src":"930:27:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":59735,"name":"uint16","nodeType":"ElementaryTypeName","src":"930:6:75","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":59738,"mutability":"mutable","name":"gasLimit","nameLocation":"971:8:75","nodeType":"VariableDeclaration","scope":59749,"src":"963:16:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59737,"name":"uint256","nodeType":"ElementaryTypeName","src":"963:7:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":59740,"mutability":"mutable","name":"receiver","nameLocation":"993:8:75","nodeType":"VariableDeclaration","scope":59749,"src":"985:16:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59739,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:75","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"880:125:75"},"returnParameters":{"id":59748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59743,"mutability":"mutable","name":"success","nameLocation":"1029:7:75","nodeType":"VariableDeclaration","scope":59749,"src":"1024:12:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59742,"name":"bool","nodeType":"ElementaryTypeName","src":"1024:4:75","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":59745,"mutability":"mutable","name":"retBytes","nameLocation":"1051:8:75","nodeType":"VariableDeclaration","scope":59749,"src":"1038:21:75","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":59744,"name":"bytes","nodeType":"ElementaryTypeName","src":"1038:5:75","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":59747,"mutability":"mutable","name":"gasUsed","nameLocation":"1069:7:75","nodeType":"VariableDeclaration","scope":59749,"src":"1061:15:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":59746,"name":"uint256","nodeType":"ElementaryTypeName","src":"1061:7:75","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1023:54:75"},"scope":59768,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":59757,"nodeType":"FunctionDefinition","src":"1294:91:75","nodes":[],"documentation":{"id":59750,"nodeType":"StructuredDocumentation","src":"1082:209:75","text":"@notice Returns the configured onramp for a specific destination chain.\n @param destChainSelector The destination chain Id to get the onRamp for.\n @return onRampAddress The address of the onRamp."},"functionSelector":"a8d87a3b","implemented":false,"kind":"function","modifiers":[],"name":"getOnRamp","nameLocation":"1303:9:75","parameters":{"id":59753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59752,"mutability":"mutable","name":"destChainSelector","nameLocation":"1320:17:75","nodeType":"VariableDeclaration","scope":59757,"src":"1313:24:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":59751,"name":"uint64","nodeType":"ElementaryTypeName","src":"1313:6:75","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"1312:26:75"},"returnParameters":{"id":59756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59755,"mutability":"mutable","name":"onRampAddress","nameLocation":"1370:13:75","nodeType":"VariableDeclaration","scope":59757,"src":"1362:21:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59754,"name":"address","nodeType":"ElementaryTypeName","src":"1362:7:75","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1361:23:75"},"scope":59768,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":59767,"nodeType":"FunctionDefinition","src":"1615:103:75","nodes":[],"documentation":{"id":59758,"nodeType":"StructuredDocumentation","src":"1389:223:75","text":"@notice Return true if the given offRamp is a configured offRamp for the given source chain.\n @param sourceChainSelector The source chain selector to check.\n @param offRamp The address of the offRamp to check."},"functionSelector":"83826b2b","implemented":false,"kind":"function","modifiers":[],"name":"isOffRamp","nameLocation":"1624:9:75","parameters":{"id":59763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59760,"mutability":"mutable","name":"sourceChainSelector","nameLocation":"1641:19:75","nodeType":"VariableDeclaration","scope":59767,"src":"1634:26:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":59759,"name":"uint64","nodeType":"ElementaryTypeName","src":"1634:6:75","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":59762,"mutability":"mutable","name":"offRamp","nameLocation":"1670:7:75","nodeType":"VariableDeclaration","scope":59767,"src":"1662:15:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59761,"name":"address","nodeType":"ElementaryTypeName","src":"1662:7:75","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1633:45:75"},"returnParameters":{"id":59766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59765,"mutability":"mutable","name":"isOffRamp","nameLocation":"1707:9:75","nodeType":"VariableDeclaration","scope":59767,"src":"1702:14:75","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59764,"name":"bool","nodeType":"ElementaryTypeName","src":"1702:4:75","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1701:16:75"},"scope":59768,"stateMutability":"view","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IRouter","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[59768],"name":"IRouter","nameLocation":"116:7:75","scope":59769,"usedErrors":[59730],"usedEvents":[]}],"license":"MIT"},"id":75}