{"abi":[{"type":"function","name":"ccipSend","inputs":[{"name":"destinationChainSelector","type":"uint64","internalType":"uint64"},{"name":"message","type":"tuple","internalType":"struct Client.EVM2AnyMessage","components":[{"name":"receiver","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"tokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"feeToken","type":"address","internalType":"address"},{"name":"extraArgs","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"payable"},{"type":"function","name":"getFee","inputs":[{"name":"destinationChainSelector","type":"uint64","internalType":"uint64"},{"name":"message","type":"tuple","internalType":"struct Client.EVM2AnyMessage","components":[{"name":"receiver","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"tokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]},{"name":"feeToken","type":"address","internalType":"address"},{"name":"extraArgs","type":"bytes","internalType":"bytes"}]}],"outputs":[{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"isChainSupported","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"supported","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"InsufficientFeeTokenAmount","inputs":[]},{"type":"error","name":"InvalidMsgValue","inputs":[]},{"type":"error","name":"UnsupportedDestinationChain","inputs":[{"name":"destChainSelector","type":"uint64","internalType":"uint64"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"96f4e9f9","getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":"20487ded","isChainSupported(uint64)":"a48a9058"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InsufficientFeeTokenAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidMsgValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"UnsupportedDestinationChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipSend\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destinationChainSelector\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"bytes\",\"name\":\"receiver\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"tokenAmounts\",\"type\":\"tuple[]\"},{\"internalType\":\"address\",\"name\":\"feeToken\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"extraArgs\",\"type\":\"bytes\"}],\"internalType\":\"struct Client.EVM2AnyMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"destChainSelector\",\"type\":\"uint64\"}],\"name\":\"isChainSupported\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chain ID\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"_0\":\"messageId The message ID\"}},\"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"details\":\"Reverts with appropriate reason upon invalid message.\",\"params\":{\"destinationChainSelector\":\"The destination chainSelector\",\"message\":\"The cross-chain CCIP message including data and/or tokens\"},\"returns\":{\"fee\":\"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message.\"}},\"isChainSupported(uint64)\":{\"params\":{\"destChainSelector\":\"The chain to check.\"},\"returns\":{\"supported\":\"is true if it is supported, false if not.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))\":{\"notice\":\"Request a message to be sent to the destination chain\"},\"isChainSupported(uint64)\":{\"notice\":\"Checks if the given chain ID is supported for sending/receiving.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":\"IRouterClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol\":{\"keccak256\":\"0x176bc6a1bec19d76464566d4becb68946e4c53b779e2019b34f95be4fee571f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f8abd3813d7acb8f5b510dbdc9f7eb9b0fe300ea4261ae9c4f843e0d3f0b24a\",\"dweb:/ipfs/QmSCmCC5wXYqgvLfpdqWxZTfo837DYVPLo9CYEKhgid1DA\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"InsufficientFeeTokenAmount"},{"inputs":[],"type":"error","name":"InvalidMsgValue"},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"type":"error","name":"UnsupportedDestinationChain"},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple","components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}]}],"stateMutability":"payable","type":"function","name":"ccipSend","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"uint64","name":"destinationChainSelector","type":"uint64"},{"internalType":"struct Client.EVM2AnyMessage","name":"message","type":"tuple","components":[{"internalType":"bytes","name":"receiver","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"tokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]},{"internalType":"address","name":"feeToken","type":"address"},{"internalType":"bytes","name":"extraArgs","type":"bytes"}]}],"stateMutability":"view","type":"function","name":"getFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[{"internalType":"uint64","name":"destChainSelector","type":"uint64"}],"stateMutability":"view","type":"function","name":"isChainSupported","outputs":[{"internalType":"bool","name":"supported","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"Note if msg.value is larger than the required fee (from getFee) we accept the overpayment with no refund.Reverts with appropriate reason upon invalid message.","params":{"destinationChainSelector":"The destination chain ID","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"_0":"messageId The message ID"}},"getFee(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"details":"Reverts with appropriate reason upon invalid message.","params":{"destinationChainSelector":"The destination chainSelector","message":"The cross-chain CCIP message including data and/or tokens"},"returns":{"fee":"returns execution fee for the message delivery to destination chain, denominated in the feeToken specified in the message."}},"isChainSupported(uint64)":{"params":{"destChainSelector":"The chain to check."},"returns":{"supported":"is true if it is supported, false if not."}}},"version":1},"userdoc":{"kind":"user","methods":{"ccipSend(uint64,(bytes,bytes,(address,uint256)[],address,bytes))":{"notice":"Request a message to be sent to the destination chain"},"isChainSupported(uint64)":{"notice":"Checks if the given chain ID is supported for sending/receiving."}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol":"IRouterClient"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol":{"keccak256":"0x176bc6a1bec19d76464566d4becb68946e4c53b779e2019b34f95be4fee571f6","urls":["bzz-raw://8f8abd3813d7acb8f5b510dbdc9f7eb9b0fe300ea4261ae9c4f843e0d3f0b24a","dweb:/ipfs/QmSCmCC5wXYqgvLfpdqWxZTfo837DYVPLo9CYEKhgid1DA"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88","urls":["bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256","dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol","id":60636,"exportedSymbols":{"Client":[60715],"IRouterClient":[60635]},"nodeType":"SourceUnit","src":"32:1598:74","nodes":[{"id":60594,"nodeType":"PragmaDirective","src":"32:23:74","nodes":[],"literals":["solidity","^","0.8",".4"]},{"id":60596,"nodeType":"ImportDirective","src":"57:47:74","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","nameLocation":"-1:-1:-1","scope":60636,"sourceUnit":60716,"symbolAliases":[{"foreign":{"id":60595,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":60715,"src":"65:6:74","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":60635,"nodeType":"ContractDefinition","src":"106:1523:74","nodes":[{"id":60600,"nodeType":"ErrorDefinition","src":"134:60:74","nodes":[],"errorSelector":"ae236d9c","name":"UnsupportedDestinationChain","nameLocation":"140:27:74","parameters":{"id":60599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60598,"mutability":"mutable","name":"destChainSelector","nameLocation":"175:17:74","nodeType":"VariableDeclaration","scope":60600,"src":"168:24:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":60597,"name":"uint64","nodeType":"ElementaryTypeName","src":"168:6:74","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"167:26:74"}},{"id":60602,"nodeType":"ErrorDefinition","src":"197:35:74","nodes":[],"errorSelector":"07da6ee6","name":"InsufficientFeeTokenAmount","nameLocation":"203:26:74","parameters":{"id":60601,"nodeType":"ParameterList","parameters":[],"src":"229:2:74"}},{"id":60604,"nodeType":"ErrorDefinition","src":"235:24:74","nodes":[],"errorSelector":"1841b4e1","name":"InvalidMsgValue","nameLocation":"241:15:74","parameters":{"id":60603,"nodeType":"ParameterList","parameters":[],"src":"256:2:74"}},{"id":60612,"nodeType":"FunctionDefinition","src":"459:91:74","nodes":[],"documentation":{"id":60605,"nodeType":"StructuredDocumentation","src":"263:193:74","text":"@notice Checks if the given chain ID is supported for sending/receiving.\n @param destChainSelector The chain to check.\n @return supported is true if it is supported, false if not."},"functionSelector":"a48a9058","implemented":false,"kind":"function","modifiers":[],"name":"isChainSupported","nameLocation":"468:16:74","parameters":{"id":60608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60607,"mutability":"mutable","name":"destChainSelector","nameLocation":"492:17:74","nodeType":"VariableDeclaration","scope":60612,"src":"485:24:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":60606,"name":"uint64","nodeType":"ElementaryTypeName","src":"485:6:74","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"484:26:74"},"returnParameters":{"id":60611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60610,"mutability":"mutable","name":"supported","nameLocation":"539:9:74","nodeType":"VariableDeclaration","scope":60612,"src":"534:14:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":60609,"name":"bool","nodeType":"ElementaryTypeName","src":"534:4:74","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"533:16:74"},"scope":60635,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60623,"nodeType":"FunctionDefinition","src":"913:135:74","nodes":[],"documentation":{"id":60613,"nodeType":"StructuredDocumentation","src":"554:356:74","text":"@param destinationChainSelector The destination chainSelector\n @param message The cross-chain CCIP message including data and/or tokens\n @return fee returns execution fee for the message\n delivery to destination chain, denominated in the feeToken specified in the message.\n @dev Reverts with appropriate reason upon invalid message."},"functionSelector":"20487ded","implemented":false,"kind":"function","modifiers":[],"name":"getFee","nameLocation":"922:6:74","parameters":{"id":60619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60615,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"941:24:74","nodeType":"VariableDeclaration","scope":60623,"src":"934:31:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":60614,"name":"uint64","nodeType":"ElementaryTypeName","src":"934:6:74","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":60618,"mutability":"mutable","name":"message","nameLocation":"1000:7:74","nodeType":"VariableDeclaration","scope":60623,"src":"971:36:74","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$60669_memory_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":60617,"nodeType":"UserDefinedTypeName","pathNode":{"id":60616,"name":"Client.EVM2AnyMessage","nameLocations":["971:6:74","978:14:74"],"nodeType":"IdentifierPath","referencedDeclaration":60669,"src":"971:21:74"},"referencedDeclaration":60669,"src":"971:21:74","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$60669_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"src":"928:83:74"},"returnParameters":{"id":60622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60621,"mutability":"mutable","name":"fee","nameLocation":"1043:3:74","nodeType":"VariableDeclaration","scope":60623,"src":"1035:11:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":60620,"name":"uint256","nodeType":"ElementaryTypeName","src":"1035:7:74","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1034:13:74"},"scope":60635,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":60634,"nodeType":"FunctionDefinition","src":"1489:138:74","nodes":[],"documentation":{"id":60624,"nodeType":"StructuredDocumentation","src":"1052:434:74","text":"@notice Request a message to be sent to the destination chain\n @param destinationChainSelector The destination chain ID\n @param message The cross-chain CCIP message including data and/or tokens\n @return messageId The message ID\n @dev Note if msg.value is larger than the required fee (from getFee) we accept\n the overpayment with no refund.\n @dev Reverts with appropriate reason upon invalid message."},"functionSelector":"96f4e9f9","implemented":false,"kind":"function","modifiers":[],"name":"ccipSend","nameLocation":"1498:8:74","parameters":{"id":60630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60626,"mutability":"mutable","name":"destinationChainSelector","nameLocation":"1519:24:74","nodeType":"VariableDeclaration","scope":60634,"src":"1512:31:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":60625,"name":"uint64","nodeType":"ElementaryTypeName","src":"1512:6:74","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":60629,"mutability":"mutable","name":"message","nameLocation":"1580:7:74","nodeType":"VariableDeclaration","scope":60634,"src":"1549:38:74","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$60669_calldata_ptr","typeString":"struct Client.EVM2AnyMessage"},"typeName":{"id":60628,"nodeType":"UserDefinedTypeName","pathNode":{"id":60627,"name":"Client.EVM2AnyMessage","nameLocations":["1549:6:74","1556:14:74"],"nodeType":"IdentifierPath","referencedDeclaration":60669,"src":"1549:21:74"},"referencedDeclaration":60669,"src":"1549:21:74","typeDescriptions":{"typeIdentifier":"t_struct$_EVM2AnyMessage_$60669_storage_ptr","typeString":"struct Client.EVM2AnyMessage"}},"visibility":"internal"}],"src":"1506:85:74"},"returnParameters":{"id":60633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":60632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60634,"src":"1618:7:74","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":60631,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1618:7:74","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1617:9:74"},"scope":60635,"stateMutability":"payable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"IRouterClient","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"linearizedBaseContracts":[60635],"name":"IRouterClient","nameLocation":"116:13:74","scope":60636,"usedErrors":[60600,60602,60604],"usedEvents":[]}],"license":"MIT"},"id":74}