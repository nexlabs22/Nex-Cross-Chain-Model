{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.7+commit.e28d00a7"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"london","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b","urls":["bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f","dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":63085,"exportedSymbols":{"Initializable":[62871],"ReentrancyGuardUpgradeable":[63084]},"nodeType":"SourceUnit","src":"112:3571:81","nodes":[{"id":63001,"nodeType":"PragmaDirective","src":"112:23:81","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":63003,"nodeType":"ImportDirective","src":"136:63:81","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":63085,"sourceUnit":62872,"symbolAliases":[{"foreign":{"id":63002,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"src":"144:13:81","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":63084,"nodeType":"ContractDefinition","src":"952:2730:81","nodes":[{"id":63009,"nodeType":"VariableDeclaration","src":"1768:41:81","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1793:12:81","scope":63084,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63007,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":63008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:81","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":63012,"nodeType":"VariableDeclaration","src":"1815:37:81","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1840:8:81","scope":63084,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63010,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":63011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1851:1:81","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":63014,"nodeType":"VariableDeclaration","src":"1859:23:81","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1875:7:81","scope":63084,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":63013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":63023,"nodeType":"FunctionDefinition","src":"1889:111:81","nodes":[],"body":{"id":63022,"nodeType":"Block","src":"1949:51:81","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":63019,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63033,"src":"1959:32:81","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":63020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1959:34:81","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63021,"nodeType":"ExpressionStatement","src":"1959:34:81"}]},"implemented":true,"kind":"function","modifiers":[{"id":63017,"kind":"modifierInvocation","modifierName":{"id":63016,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":62816,"src":"1932:16:81"},"nodeType":"ModifierInvocation","src":"1932:16:81"}],"name":"__ReentrancyGuard_init","nameLocation":"1898:22:81","parameters":{"id":63015,"nodeType":"ParameterList","parameters":[],"src":"1920:2:81"},"returnParameters":{"id":63018,"nodeType":"ParameterList","parameters":[],"src":"1949:0:81"},"scope":63084,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":63033,"nodeType":"FunctionDefinition","src":"2006:109:81","nodes":[],"body":{"id":63032,"nodeType":"Block","src":"2076:39:81","nodes":[],"statements":[{"expression":{"id":63030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":63028,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63014,"src":"2086:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":63029,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63009,"src":"2096:12:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2086:22:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":63031,"nodeType":"ExpressionStatement","src":"2086:22:81"}]},"implemented":true,"kind":"function","modifiers":[{"id":63026,"kind":"modifierInvocation","modifierName":{"id":63025,"name":"onlyInitializing","nodeType":"IdentifierPath","referencedDeclaration":62816,"src":"2059:16:81"},"nodeType":"ModifierInvocation","src":"2059:16:81"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2015:32:81","parameters":{"id":63024,"nodeType":"ParameterList","parameters":[],"src":"2047:2:81"},"returnParameters":{"id":63027,"nodeType":"ParameterList","parameters":[],"src":"2076:0:81"},"scope":63084,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":63044,"nodeType":"ModifierDefinition","src":"2492:103:81","nodes":[],"body":{"id":63043,"nodeType":"Block","src":"2516:79:81","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":63036,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63059,"src":"2526:19:81","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":63037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2526:21:81","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63038,"nodeType":"ExpressionStatement","src":"2526:21:81"},{"id":63039,"nodeType":"PlaceholderStatement","src":"2557:1:81"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":63040,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63067,"src":"2568:18:81","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":63041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2568:20:81","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63042,"nodeType":"ExpressionStatement","src":"2568:20:81"}]},"documentation":{"id":63034,"nodeType":"StructuredDocumentation","src":"2121:366:81","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2501:12:81","parameters":{"id":63035,"nodeType":"ParameterList","parameters":[],"src":"2513:2:81"},"virtual":false,"visibility":"internal"},{"id":63059,"nodeType":"FunctionDefinition","src":"2601:287:81","nodes":[],"body":{"id":63058,"nodeType":"Block","src":"2640:248:81","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":63050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63048,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63014,"src":"2733:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":63049,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63012,"src":"2744:8:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2733:19:81","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":63051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2754:33:81","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":63047,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2725:7:81","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":63052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2725:63:81","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":63053,"nodeType":"ExpressionStatement","src":"2725:63:81"},{"expression":{"id":63056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":63054,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63014,"src":"2863:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":63055,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63012,"src":"2873:8:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:18:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":63057,"nodeType":"ExpressionStatement","src":"2863:18:81"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2610:19:81","parameters":{"id":63045,"nodeType":"ParameterList","parameters":[],"src":"2629:2:81"},"returnParameters":{"id":63046,"nodeType":"ParameterList","parameters":[],"src":"2640:0:81"},"scope":63084,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":63067,"nodeType":"FunctionDefinition","src":"2894:209:81","nodes":[],"body":{"id":63066,"nodeType":"Block","src":"2932:171:81","nodes":[],"statements":[{"expression":{"id":63064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":63062,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63014,"src":"3074:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":63063,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63009,"src":"3084:12:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:22:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":63065,"nodeType":"ExpressionStatement","src":"3074:22:81"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2903:18:81","parameters":{"id":63060,"nodeType":"ParameterList","parameters":[],"src":"2921:2:81"},"returnParameters":{"id":63061,"nodeType":"ParameterList","parameters":[],"src":"2932:0:81"},"scope":63084,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":63078,"nodeType":"FunctionDefinition","src":"3282:107:81","nodes":[],"body":{"id":63077,"nodeType":"Block","src":"3346:43:81","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":63075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":63073,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63014,"src":"3363:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":63074,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63012,"src":"3374:8:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3363:19:81","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":63072,"id":63076,"nodeType":"Return","src":"3356:26:81"}]},"documentation":{"id":63068,"nodeType":"StructuredDocumentation","src":"3109:168:81","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3291:23:81","parameters":{"id":63069,"nodeType":"ParameterList","parameters":[],"src":"3314:2:81"},"returnParameters":{"id":63072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63078,"src":"3340:4:81","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":63070,"name":"bool","nodeType":"ElementaryTypeName","src":"3340:4:81","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3339:6:81"},"scope":63084,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":63083,"nodeType":"VariableDeclaration","src":"3654:25:81","nodes":[],"constant":false,"documentation":{"id":63079,"nodeType":"StructuredDocumentation","src":"3395:254:81","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"3674:5:81","scope":63084,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":63080,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:81","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":63082,"length":{"hexValue":"3439","id":63081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:2:81","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3654:11:81","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":63005,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":62871,"src":"1000:13:81"},"id":63006,"nodeType":"InheritanceSpecifier","src":"1000:13:81"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":63004,"nodeType":"StructuredDocumentation","src":"201:750:81","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[63084,62871],"name":"ReentrancyGuardUpgradeable","nameLocation":"970:26:81","scope":63085,"usedErrors":[]}],"license":"MIT"},"id":81}