{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b","urls":["bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f","dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":67402,"exportedSymbols":{"Initializable":[67188],"ReentrancyGuardUpgradeable":[67401]},"nodeType":"SourceUnit","src":"112:3571:123","nodes":[{"id":67318,"nodeType":"PragmaDirective","src":"112:23:123","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":67320,"nodeType":"ImportDirective","src":"136:63:123","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":67402,"sourceUnit":67189,"symbolAliases":[{"foreign":{"id":67319,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67188,"src":"144:13:123","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":67401,"nodeType":"ContractDefinition","src":"952:2730:123","nodes":[{"id":67326,"nodeType":"VariableDeclaration","src":"1768:41:123","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1793:12:123","scope":67401,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":67325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:123","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":67329,"nodeType":"VariableDeclaration","src":"1815:37:123","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1840:8:123","scope":67401,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":67328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1851:1:123","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":67331,"nodeType":"VariableDeclaration","src":"1859:23:123","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1875:7:123","scope":67401,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67330,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":67340,"nodeType":"FunctionDefinition","src":"1889:111:123","nodes":[],"body":{"id":67339,"nodeType":"Block","src":"1949:51:123","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":67336,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67350,"src":"1959:32:123","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":67337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:34:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67338,"nodeType":"ExpressionStatement","src":"1959:34:123"}]},"implemented":true,"kind":"function","modifiers":[{"id":67334,"kind":"modifierInvocation","modifierName":{"id":67333,"name":"onlyInitializing","nameLocations":["1932:16:123"],"nodeType":"IdentifierPath","referencedDeclaration":67133,"src":"1932:16:123"},"nodeType":"ModifierInvocation","src":"1932:16:123"}],"name":"__ReentrancyGuard_init","nameLocation":"1898:22:123","parameters":{"id":67332,"nodeType":"ParameterList","parameters":[],"src":"1920:2:123"},"returnParameters":{"id":67335,"nodeType":"ParameterList","parameters":[],"src":"1949:0:123"},"scope":67401,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":67350,"nodeType":"FunctionDefinition","src":"2006:109:123","nodes":[],"body":{"id":67349,"nodeType":"Block","src":"2076:39:123","nodes":[],"statements":[{"expression":{"id":67347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67345,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67331,"src":"2086:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":67346,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67326,"src":"2096:12:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2086:22:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67348,"nodeType":"ExpressionStatement","src":"2086:22:123"}]},"implemented":true,"kind":"function","modifiers":[{"id":67343,"kind":"modifierInvocation","modifierName":{"id":67342,"name":"onlyInitializing","nameLocations":["2059:16:123"],"nodeType":"IdentifierPath","referencedDeclaration":67133,"src":"2059:16:123"},"nodeType":"ModifierInvocation","src":"2059:16:123"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2015:32:123","parameters":{"id":67341,"nodeType":"ParameterList","parameters":[],"src":"2047:2:123"},"returnParameters":{"id":67344,"nodeType":"ParameterList","parameters":[],"src":"2076:0:123"},"scope":67401,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":67361,"nodeType":"ModifierDefinition","src":"2492:103:123","nodes":[],"body":{"id":67360,"nodeType":"Block","src":"2516:79:123","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":67353,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67376,"src":"2526:19:123","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":67354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:21:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67355,"nodeType":"ExpressionStatement","src":"2526:21:123"},{"id":67356,"nodeType":"PlaceholderStatement","src":"2557:1:123"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":67357,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67384,"src":"2568:18:123","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":67358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2568:20:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67359,"nodeType":"ExpressionStatement","src":"2568:20:123"}]},"documentation":{"id":67351,"nodeType":"StructuredDocumentation","src":"2121:366:123","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2501:12:123","parameters":{"id":67352,"nodeType":"ParameterList","parameters":[],"src":"2513:2:123"},"virtual":false,"visibility":"internal"},{"id":67376,"nodeType":"FunctionDefinition","src":"2601:287:123","nodes":[],"body":{"id":67375,"nodeType":"Block","src":"2640:248:123","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":67367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67365,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67331,"src":"2733:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":67366,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67329,"src":"2744:8:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2733:19:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":67368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2754:33:123","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":67364,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"2725:7:123","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":67369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:63:123","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":67370,"nodeType":"ExpressionStatement","src":"2725:63:123"},{"expression":{"id":67373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67371,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67331,"src":"2863:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":67372,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67329,"src":"2873:8:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:18:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67374,"nodeType":"ExpressionStatement","src":"2863:18:123"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2610:19:123","parameters":{"id":67362,"nodeType":"ParameterList","parameters":[],"src":"2629:2:123"},"returnParameters":{"id":67363,"nodeType":"ParameterList","parameters":[],"src":"2640:0:123"},"scope":67401,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":67384,"nodeType":"FunctionDefinition","src":"2894:209:123","nodes":[],"body":{"id":67383,"nodeType":"Block","src":"2932:171:123","nodes":[],"statements":[{"expression":{"id":67381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67379,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67331,"src":"3074:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":67380,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67326,"src":"3084:12:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:22:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67382,"nodeType":"ExpressionStatement","src":"3074:22:123"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2903:18:123","parameters":{"id":67377,"nodeType":"ParameterList","parameters":[],"src":"2921:2:123"},"returnParameters":{"id":67378,"nodeType":"ParameterList","parameters":[],"src":"2932:0:123"},"scope":67401,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":67395,"nodeType":"FunctionDefinition","src":"3282:107:123","nodes":[],"body":{"id":67394,"nodeType":"Block","src":"3346:43:123","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":67392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":67390,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67331,"src":"3363:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":67391,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67329,"src":"3374:8:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3363:19:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":67389,"id":67393,"nodeType":"Return","src":"3356:26:123"}]},"documentation":{"id":67385,"nodeType":"StructuredDocumentation","src":"3109:168:123","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3291:23:123","parameters":{"id":67386,"nodeType":"ParameterList","parameters":[],"src":"3314:2:123"},"returnParameters":{"id":67389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67395,"src":"3340:4:123","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":67387,"name":"bool","nodeType":"ElementaryTypeName","src":"3340:4:123","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3339:6:123"},"scope":67401,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":67400,"nodeType":"VariableDeclaration","src":"3654:25:123","nodes":[],"constant":false,"documentation":{"id":67396,"nodeType":"StructuredDocumentation","src":"3395:254:123","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"3674:5:123","scope":67401,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":67397,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:123","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":67399,"length":{"hexValue":"3439","id":67398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:2:123","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3654:11:123","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":67322,"name":"Initializable","nameLocations":["1000:13:123"],"nodeType":"IdentifierPath","referencedDeclaration":67188,"src":"1000:13:123"},"id":67323,"nodeType":"InheritanceSpecifier","src":"1000:13:123"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":67321,"nodeType":"StructuredDocumentation","src":"201:750:123","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[67401,67188],"name":"ReentrancyGuardUpgradeable","nameLocation":"970:26:123","scope":67402,"usedErrors":[],"usedEvents":[67034]}],"license":"MIT"},"id":123}