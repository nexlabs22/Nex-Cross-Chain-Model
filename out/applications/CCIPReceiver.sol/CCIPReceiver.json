{"abi":[{"type":"function","name":"ccipReceive","inputs":[{"name":"message","type":"tuple","internalType":"struct Client.Any2EVMMessage","components":[{"name":"messageId","type":"bytes32","internalType":"bytes32"},{"name":"sourceChainSelector","type":"uint64","internalType":"uint64"},{"name":"sender","type":"bytes","internalType":"bytes"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"destTokenAmounts","type":"tuple[]","internalType":"struct Client.EVMTokenAmount[]","components":[{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"}]}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getRouter","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"supportsInterface","inputs":[{"name":"interfaceId","type":"bytes4","internalType":"bytes4"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"error","name":"InvalidRouter","inputs":[{"name":"router","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":"85572ffb","getRouter()":"b0f479a1","supportsInterface(bytes4)":"01ffc9a7"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"}],\"name\":\"InvalidRouter\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"messageId\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"sourceChainSelector\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"sender\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct Client.EVMTokenAmount[]\",\"name\":\"destTokenAmounts\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Client.Any2EVMMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"ccipReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"details\":\"Note ensure you check the msg.sender is the OffRampRouter\",\"params\":{\"message\":\"CCIP Message\"}},\"getRouter()\":{\"returns\":{\"_0\":\"CCIP router address\"}},\"supportsInterface(bytes4)\":{\"details\":\"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.\",\"params\":{\"interfaceId\":\"The interfaceId to check\"},\"returns\":{\"_0\":\"true if the interfaceId is supported\"}}},\"title\":\"CCIPReceiver - Base contract for CCIP applications that can receive messages.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))\":{\"notice\":\"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution.\"},\"getRouter()\":{\"notice\":\"Return the current router\"},\"supportsInterface(bytes4)\":{\"notice\":\"IERC165 supports an interfaceId\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":\"CCIPReceiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":@uniswap/=node_modules/@uniswap/\",\":@zksync/=node_modules/@zksync/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":solady/=node_modules/solady/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol\":{\"keccak256\":\"0x846fbf21ac7bc86c8e4aa0b3dc126126536cc414d3bb99c1fed747ce99f9f40c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://384d2d6f2a5056f43de589e9f2df1afa69afe7861871715ec371327cbc5684f9\",\"dweb:/ipfs/QmZmpeH4sTwVdvfTGvfsthwEE4eTw7C3hvHfNFedLPfisp\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol\":{\"keccak256\":\"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33\",\"dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol\":{\"keccak256\":\"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256\",\"dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE\"]},\"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"router","type":"address"}],"type":"error","name":"InvalidRouter"},{"inputs":[{"internalType":"struct Client.Any2EVMMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"messageId","type":"bytes32"},{"internalType":"uint64","name":"sourceChainSelector","type":"uint64"},{"internalType":"bytes","name":"sender","type":"bytes"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"struct Client.EVMTokenAmount[]","name":"destTokenAmounts","type":"tuple[]","components":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}]}]}],"stateMutability":"nonpayable","type":"function","name":"ccipReceive"},{"inputs":[],"stateMutability":"view","type":"function","name":"getRouter","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"stateMutability":"view","type":"function","name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"details":"Note ensure you check the msg.sender is the OffRampRouter","params":{"message":"CCIP Message"}},"getRouter()":{"returns":{"_0":"CCIP router address"}},"supportsInterface(bytes4)":{"details":"Should indicate whether the contract implements IAny2EVMMessageReceiver e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId This allows CCIP to check if ccipReceive is available before calling it. If this returns false or reverts, only tokens are transferred to the receiver. If this returns true, tokens are transferred and ccipReceive is called atomically. Additionally, if the receiver address does not have code associated with it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred.","params":{"interfaceId":"The interfaceId to check"},"returns":{"_0":"true if the interfaceId is supported"}}},"version":1},"userdoc":{"kind":"user","methods":{"ccipReceive((bytes32,uint64,bytes,bytes,(address,uint256)[]))":{"notice":"Called by the Router to deliver a message. If this reverts, any token transfers also revert. The message will move to a FAILED state and become available for manual execution."},"getRouter()":{"notice":"Return the current router"},"supportsInterface(bytes4)":{"notice":"IERC165 supports an interfaceId"}},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","@uniswap/=node_modules/@uniswap/","@zksync/=node_modules/@zksync/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/","solady/=node_modules/solady/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":"CCIPReceiver"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol":{"keccak256":"0x846fbf21ac7bc86c8e4aa0b3dc126126536cc414d3bb99c1fed747ce99f9f40c","urls":["bzz-raw://384d2d6f2a5056f43de589e9f2df1afa69afe7861871715ec371327cbc5684f9","dweb:/ipfs/QmZmpeH4sTwVdvfTGvfsthwEE4eTw7C3hvHfNFedLPfisp"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol":{"keccak256":"0xd2a05a4f58a453cbf8cfa6aa78f58cb8e42091b3a025f711a0aa51f584e16b48","urls":["bzz-raw://e3bb4ca50612b0150a29b9ea7c82f6228914ff54716584541bad5c0259e8fa33","dweb:/ipfs/QmTnqhNtBD9bUmqVaR4YHkWrBUdSGHV3DXAgrTM193PGkH"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol":{"keccak256":"0xa1ce70adec733c80b230084b425a50caa852a99f17a7e43e38a96a975f11ce88","urls":["bzz-raw://08db3aa57ceae13832c1bf323aa29afa2620fd5b5205ff0d56152bf323c56256","dweb:/ipfs/QmUG2FSVP8xXVkdgFwNhc4YFDU7FNCaf1kKShiTaaHUddE"],"license":"MIT"},"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol":{"keccak256":"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b","urls":["bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df","dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol","id":59673,"exportedSymbols":{"CCIPReceiver":[59672],"Client":[59870],"IAny2EVMMessageReceiver":[59685],"IERC165":[64574]},"nodeType":"SourceUnit","src":"32:2477:70","nodes":[{"id":59556,"nodeType":"PragmaDirective","src":"32:23:70","nodes":[],"literals":["solidity","^","0.8",".4"]},{"id":59558,"nodeType":"ImportDirective","src":"57:82:70","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol","file":"../interfaces/IAny2EVMMessageReceiver.sol","nameLocation":"-1:-1:-1","scope":59673,"sourceUnit":59686,"symbolAliases":[{"foreign":{"id":59557,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59685,"src":"65:23:70","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59560,"nodeType":"ImportDirective","src":"141:47:70","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol","file":"../libraries/Client.sol","nameLocation":"-1:-1:-1","scope":59673,"sourceUnit":59871,"symbolAliases":[{"foreign":{"id":59559,"name":"Client","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59870,"src":"149:6:70","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59562,"nodeType":"ImportDirective","src":"190:108:70","nodes":[],"absolutePath":"node_modules/@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol","file":"../../vendor/openzeppelin-solidity/v5.0.2/contracts/utils/introspection/IERC165.sol","nameLocation":"-1:-1:-1","scope":59673,"sourceUnit":64575,"symbolAliases":[{"foreign":{"id":59561,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64574,"src":"198:7:70","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":59672,"nodeType":"ContractDefinition","src":"389:2119:70","nodes":[{"id":59569,"nodeType":"VariableDeclaration","src":"460:39:70","nodes":[],"constant":false,"mutability":"immutable","name":"i_ccipRouter","nameLocation":"487:12:70","scope":59672,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59568,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:70","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"id":59593,"nodeType":"FunctionDefinition","src":"504:124:70","nodes":[],"body":{"id":59592,"nodeType":"Block","src":"532:96:70","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":59579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":59574,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59571,"src":"542:6:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":59577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"560:1:70","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":59576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"552:7:70","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59575,"name":"address","nodeType":"ElementaryTypeName","src":"552:7:70","typeDescriptions":{}}},"id":59578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"552:10:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"542:20:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59587,"nodeType":"IfStatement","src":"538:58:70","trueBody":{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":59583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"593:1:70","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":59582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"585:7:70","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59581,"name":"address","nodeType":"ElementaryTypeName","src":"585:7:70","typeDescriptions":{}}},"id":59584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"585:10:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":59580,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59655,"src":"571:13:70","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":59585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"571:25:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":59586,"nodeType":"RevertStatement","src":"564:32:70"}},{"expression":{"id":59590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":59588,"name":"i_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59569,"src":"602:12:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":59589,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59571,"src":"617:6:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"602:21:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":59591,"nodeType":"ExpressionStatement","src":"602:21:70"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":59572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59571,"mutability":"mutable","name":"router","nameLocation":"524:6:70","nodeType":"VariableDeclaration","scope":59593,"src":"516:14:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59570,"name":"address","nodeType":"ElementaryTypeName","src":"516:7:70","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"515:16:70"},"returnParameters":{"id":59573,"nodeType":"ParameterList","parameters":[],"src":"532:0:70"},"scope":59672,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":59617,"nodeType":"FunctionDefinition","src":"1405:209:70","nodes":[],"body":{"id":59616,"nodeType":"Block","src":"1496:118:70","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":59614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":59607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":59602,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59596,"src":"1509:11:70","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":59604,"name":"IAny2EVMMessageReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59685,"src":"1529:23:70","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$59685_$","typeString":"type(contract IAny2EVMMessageReceiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAny2EVMMessageReceiver_$59685_$","typeString":"type(contract IAny2EVMMessageReceiver)"}],"id":59603,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1524:4:70","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":59605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1524:29:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAny2EVMMessageReceiver_$59685","typeString":"type(contract IAny2EVMMessageReceiver)"}},"id":59606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1554:11:70","memberName":"interfaceId","nodeType":"MemberAccess","src":"1524:41:70","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1509:56:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":59613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":59608,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59596,"src":"1569:11:70","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":59610,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":64574,"src":"1589:7:70","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$64574_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$64574_$","typeString":"type(contract IERC165)"}],"id":59609,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1584:4:70","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":59611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1584:13:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$64574","typeString":"type(contract IERC165)"}},"id":59612,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1598:11:70","memberName":"interfaceId","nodeType":"MemberAccess","src":"1584:25:70","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1569:40:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1509:100:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":59601,"id":59615,"nodeType":"Return","src":"1502:107:70"}]},"baseFunctions":[64573],"documentation":{"id":59594,"nodeType":"StructuredDocumentation","src":"632:770:70","text":"@notice IERC165 supports an interfaceId\n @param interfaceId The interfaceId to check\n @return true if the interfaceId is supported\n @dev Should indicate whether the contract implements IAny2EVMMessageReceiver\n e.g. return interfaceId == type(IAny2EVMMessageReceiver).interfaceId || interfaceId == type(IERC165).interfaceId\n This allows CCIP to check if ccipReceive is available before calling it.\n If this returns false or reverts, only tokens are transferred to the receiver.\n If this returns true, tokens are transferred and ccipReceive is called atomically.\n Additionally, if the receiver address does not have code associated with\n it at the time of execution (EXTCODESIZE returns 0), only tokens will be transferred."},"functionSelector":"01ffc9a7","implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1414:17:70","overrides":{"id":59598,"nodeType":"OverrideSpecifier","overrides":[],"src":"1472:8:70"},"parameters":{"id":59597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59596,"mutability":"mutable","name":"interfaceId","nameLocation":"1439:11:70","nodeType":"VariableDeclaration","scope":59617,"src":"1432:18:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":59595,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1432:6:70","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1431:20:70"},"returnParameters":{"id":59601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59617,"src":"1490:4:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":59599,"name":"bool","nodeType":"ElementaryTypeName","src":"1490:4:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1489:6:70"},"scope":59672,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":59632,"nodeType":"FunctionDefinition","src":"1660:130:70","nodes":[],"body":{"id":59631,"nodeType":"Block","src":"1758:32:70","nodes":[],"statements":[{"expression":{"arguments":[{"id":59628,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59621,"src":"1777:7:70","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_calldata_ptr","typeString":"struct Client.Any2EVMMessage calldata"}],"id":59627,"name":"_ccipReceive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59639,"src":"1764:12:70","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Any2EVMMessage_$59811_memory_ptr_$returns$__$","typeString":"function (struct Client.Any2EVMMessage memory)"}},"id":59629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1764:21:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":59630,"nodeType":"ExpressionStatement","src":"1764:21:70"}]},"baseFunctions":[59684],"documentation":{"id":59618,"nodeType":"StructuredDocumentation","src":"1618:39:70","text":"@inheritdoc IAny2EVMMessageReceiver"},"functionSelector":"85572ffb","implemented":true,"kind":"function","modifiers":[{"id":59625,"kind":"modifierInvocation","modifierName":{"id":59624,"name":"onlyRouter","nameLocations":["1747:10:70"],"nodeType":"IdentifierPath","referencedDeclaration":59671,"src":"1747:10:70"},"nodeType":"ModifierInvocation","src":"1747:10:70"}],"name":"ccipReceive","nameLocation":"1669:11:70","overrides":{"id":59623,"nodeType":"OverrideSpecifier","overrides":[],"src":"1738:8:70"},"parameters":{"id":59622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59621,"mutability":"mutable","name":"message","nameLocation":"1712:7:70","nodeType":"VariableDeclaration","scope":59632,"src":"1681:38:70","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_calldata_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":59620,"nodeType":"UserDefinedTypeName","pathNode":{"id":59619,"name":"Client.Any2EVMMessage","nameLocations":["1681:6:70","1688:14:70"],"nodeType":"IdentifierPath","referencedDeclaration":59811,"src":"1681:21:70"},"referencedDeclaration":59811,"src":"1681:21:70","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1680:40:70"},"returnParameters":{"id":59626,"nodeType":"ParameterList","parameters":[],"src":"1758:0:70"},"scope":59672,"stateMutability":"nonpayable","virtual":true,"visibility":"external"},{"id":59639,"nodeType":"FunctionDefinition","src":"1891:77:70","nodes":[],"documentation":{"id":59633,"nodeType":"StructuredDocumentation","src":"1794:94:70","text":"@notice Override this function in your implementation.\n @param message Any2EVMMessage"},"implemented":false,"kind":"function","modifiers":[],"name":"_ccipReceive","nameLocation":"1900:12:70","parameters":{"id":59637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59636,"mutability":"mutable","name":"message","nameLocation":"1942:7:70","nodeType":"VariableDeclaration","scope":59639,"src":"1913:36:70","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_memory_ptr","typeString":"struct Client.Any2EVMMessage"},"typeName":{"id":59635,"nodeType":"UserDefinedTypeName","pathNode":{"id":59634,"name":"Client.Any2EVMMessage","nameLocations":["1913:6:70","1920:14:70"],"nodeType":"IdentifierPath","referencedDeclaration":59811,"src":"1913:21:70"},"referencedDeclaration":59811,"src":"1913:21:70","typeDescriptions":{"typeIdentifier":"t_struct$_Any2EVMMessage_$59811_storage_ptr","typeString":"struct Client.Any2EVMMessage"}},"visibility":"internal"}],"src":"1912:38:70"},"returnParameters":{"id":59638,"nodeType":"ParameterList","parameters":[],"src":"1967:0:70"},"scope":59672,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":59651,"nodeType":"FunctionDefinition","src":"2205:98:70","nodes":[],"body":{"id":59650,"nodeType":"Block","src":"2264:39:70","nodes":[],"statements":[{"expression":{"arguments":[{"id":59647,"name":"i_ccipRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59569,"src":"2285:12:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":59646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2277:7:70","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":59645,"name":"address","nodeType":"ElementaryTypeName","src":"2277:7:70","typeDescriptions":{}}},"id":59648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2277:21:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":59644,"id":59649,"nodeType":"Return","src":"2270:28:70"}]},"documentation":{"id":59640,"nodeType":"StructuredDocumentation","src":"2131:71:70","text":"@notice Return the current router\n @return CCIP router address"},"functionSelector":"b0f479a1","implemented":true,"kind":"function","modifiers":[],"name":"getRouter","nameLocation":"2214:9:70","parameters":{"id":59641,"nodeType":"ParameterList","parameters":[],"src":"2223:2:70"},"returnParameters":{"id":59644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59651,"src":"2255:7:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59642,"name":"address","nodeType":"ElementaryTypeName","src":"2255:7:70","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2254:9:70"},"scope":59672,"stateMutability":"view","virtual":true,"visibility":"public"},{"id":59655,"nodeType":"ErrorDefinition","src":"2307:36:70","nodes":[],"errorSelector":"d7f73334","name":"InvalidRouter","nameLocation":"2313:13:70","parameters":{"id":59654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":59653,"mutability":"mutable","name":"router","nameLocation":"2335:6:70","nodeType":"VariableDeclaration","scope":59655,"src":"2327:14:70","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":59652,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:70","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2326:16:70"}},{"id":59671,"nodeType":"ModifierDefinition","src":"2403:103:70","nodes":[],"body":{"id":59670,"nodeType":"Block","src":"2425:81:70","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":59662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":59658,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2435:3:70","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":59659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2439:6:70","memberName":"sender","nodeType":"MemberAccess","src":"2435:10:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":59660,"name":"getRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59651,"src":"2449:9:70","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":59661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:11:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2435:25:70","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":59668,"nodeType":"IfStatement","src":"2431:63:70","trueBody":{"errorCall":{"arguments":[{"expression":{"id":59664,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2483:3:70","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":59665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2487:6:70","memberName":"sender","nodeType":"MemberAccess","src":"2483:10:70","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":59663,"name":"InvalidRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59655,"src":"2469:13:70","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":59666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2469:25:70","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":59667,"nodeType":"RevertStatement","src":"2462:32:70"}},{"id":59669,"nodeType":"PlaceholderStatement","src":"2500:1:70"}]},"documentation":{"id":59656,"nodeType":"StructuredDocumentation","src":"2347:53:70","text":"@dev only calls from the set router are accepted."},"name":"onlyRouter","nameLocation":"2412:10:70","parameters":{"id":59657,"nodeType":"ParameterList","parameters":[],"src":"2422:2:70"},"virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[{"baseName":{"id":59564,"name":"IAny2EVMMessageReceiver","nameLocations":["423:23:70"],"nodeType":"IdentifierPath","referencedDeclaration":59685,"src":"423:23:70"},"id":59565,"nodeType":"InheritanceSpecifier","src":"423:23:70"},{"baseName":{"id":59566,"name":"IERC165","nameLocations":["448:7:70"],"nodeType":"IdentifierPath","referencedDeclaration":64574,"src":"448:7:70"},"id":59567,"nodeType":"InheritanceSpecifier","src":"448:7:70"}],"canonicalName":"CCIPReceiver","contractDependencies":[],"contractKind":"contract","documentation":{"id":59563,"nodeType":"StructuredDocumentation","src":"300:89:70","text":"@title CCIPReceiver - Base contract for CCIP applications that can receive messages."},"fullyImplemented":false,"linearizedBaseContracts":[59672,64574,59685],"name":"CCIPReceiver","nameLocation":"407:12:70","scope":59673,"usedErrors":[59655],"usedEvents":[]}],"license":"MIT"},"id":70}